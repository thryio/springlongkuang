<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.pcl.springlongkuang.Mapper.ExceptionMapper" >
  <resultMap id="BaseResultMap" type="org.pcl.springlongkuang.Model.Exception" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="containers" property="containers" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, containers, type, order_id, created_at, updated_at, deleted_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exceptions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exceptions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.pcl.springlongkuang.Model.Exception" >
    insert into exceptions (id, containers, type, 
      order_id, created_at, updated_at, 
      deleted_at)
    values (#{id,jdbcType=INTEGER}, #{containers,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.pcl.springlongkuang.Model.Exception" >
    insert into exceptions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="containers != null" >
        containers,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="containers != null" >
        #{containers,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.pcl.springlongkuang.Model.Exception" >
    update exceptions
    <set >
      <if test="containers != null" >
        containers = #{containers,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.pcl.springlongkuang.Model.Exception" >
    update exceptions
    set containers = #{containers,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
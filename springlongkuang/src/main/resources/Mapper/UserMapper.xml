<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.pcl.springlongkuang.Mapper.UserMapper" >

    <resultMap id="BaseResultMap" type="org.pcl.springlongkuang.Model.User" >
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="account" property="account" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="open_id" property="openId" jdbcType="VARCHAR" />
      <result column="union_id" property="unionId" jdbcType="VARCHAR" />
      <result column="nickname" property="nickname" jdbcType="VARCHAR" />
      <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
      <result column="role_id" property="roleId" jdbcType="INTEGER" />
      <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="PermissionMap" type="org.pcl.springlongkuang.Model.Permission">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="path" property="path" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="RoleMap" type="org.pcl.springlongkuang.Model.Role" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="UserInfoMap" type="org.pcl.springlongkuang.Model.UserInfo">
        <association property="user" resultMap="BaseResultMap"></association>
        <association property="role" resultMap="RoleMap"></association>
        <association property="permission" resultMap="PermissionMap"></association>
    </resultMap>

  <sql id="Base_Column_List" >
    id, account, password, open_id, union_id, nickname, avatar_url, role_id, is_valid
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="Check" parameterType="string"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where open_id=#{openId,jdbcType=VARCHAR}
  </select>
  <select id="GetUserInfo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
       from users
       where open_id=#{openId,jdbcType=VARCHAR} and is_valid=1
  </select>
  <select id="GetUser" resultMap="UserInfoMap" parameterType="java.lang.String" >
    select
           u.*,r.*,p.* from users u left join roles r on r.id = u.role_id left join permissions p on r.id = p.role_id
    where u.open_id =#{openId,jdbcType=VARCHAR }
  </select>
  <select id="GetUserByID" parameterType="java.lang.Integer" resultMap="UserInfoMap">
    select
           u.*,r.*,p.* from users u left join roles r on r.id = u.role_id left join permissions p on u.role_id = p.role_id
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <update id="InsertUser" parameterType="org.pcl.springlongkuang.Model.User" >
    update users
    <set >
      <if test="id != null">
        id = #{id,jdbcType=INTEGER}
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
        is_valid = 1,
    </set>
    where account =#{account,jdbcType=VARCHAR} and password =#{password,jdbcType=VARCHAR}
  </update>

  <update id="Bind" parameterType="org.pcl.springlongkuang.Model.User" >
    update users
    <set >
      <if test="id != null">
        id = #{id,jdbcType=INTEGER}
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
        is_valid = 1,
    </set>
    where open_id =#{openId,jdbcType=VARCHAR}
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.pcl.springlongkuang.Model.User" >
    insert into users (id, account, password, 
      open_id, union_id, nickname, 
      avatar_url, role_id, is_valid
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.pcl.springlongkuang.Model.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="unionId != null" >
        union_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.pcl.springlongkuang.Model.User" >
    update users
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null" >
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.pcl.springlongkuang.Model.User" >
    update users
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      union_id = #{unionId,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.pcl.springlongkuang.Mapper.ShopMapper" >
  <resultMap id="BaseResultMap" type="org.pcl.springlongkuang.Model.Shop" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="shop_num" property="shopNum" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="INTEGER" />
    <result column="shop_owner_id" property="shopOwnerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, shop_name, shop_num, owner_id, shop_owner_id
  </sql>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shops
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByShopName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from shops
    where shop_name=#{shopName,jdbcType=VARCHAR}
  </select>

  <select id="selectByOwnerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from shops
    where owner_id=#{ownerId,jdbcType=INTEGER}
    group by id limit 1
  </select>
  <select id="selectByKeyWord" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from shops
    where shop_name like  #{keyWord,jdbcType=VARCHAR}
  </select>

  <select id="selectBykeyWords" resultMap="BaseResultMap">
    select *
    from shops
    where shop_name like  #{keyWord,jdbcType=VARCHAR}
    order by #{sortCondition,jdbcType=VARCHAR} #{sortRule,jdbcType=VARCHAR}
    limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shops
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.pcl.springlongkuang.Model.Shop" >
    insert into shops (id, shop_name, shop_num, 
      owner_id, shop_owner_id)
    values (#{id,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}, #{shopNum,jdbcType=VARCHAR}, 
      #{ownerId,jdbcType=INTEGER}, #{shopOwnerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.pcl.springlongkuang.Model.Shop" >
    insert into shops
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="shopNum != null" >
        shop_num,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="shopOwnerId != null" >
        shop_owner_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopNum != null" >
        #{shopNum,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="shopOwnerId != null" >
        #{shopOwnerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.pcl.springlongkuang.Model.Shop" >
    update shops
    <set >
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopNum != null" >
        shop_num = #{shopNum,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="shopOwnerId != null" >
        shop_owner_id = #{shopOwnerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.pcl.springlongkuang.Model.Shop" >
    update shops
    set shop_name = #{shopName,jdbcType=VARCHAR},
      shop_num = #{shopNum,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER},
      shop_owner_id = #{shopOwnerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
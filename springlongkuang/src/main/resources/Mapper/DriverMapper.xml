<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.pcl.springlongkuang.Mapper.DriverMapper" >
  <resultMap id="BaseResultMap" type="org.pcl.springlongkuang.Model.Driver" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="driver_name" property="driverName" jdbcType="VARCHAR" />
    <result column="car_num" property="carNum" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="carrier" property="carrier" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, driver_name, car_num, phone, carrier, owner_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from drivers
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByKeyWord" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*)
    from drivers
    where phone like  #{keyWord,jdbcType=VARCHAR}
  </select>

  <select id="selectBykeyWords" resultMap="BaseResultMap">
    select *
    from drivers
    where phone like  #{keyWord,jdbcType=VARCHAR}
    order by #{sortCondition,jdbcType=VARCHAR} #{sortRule,jdbcType=VARCHAR}
    limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from drivers
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.pcl.springlongkuang.Model.Driver" >
    insert into drivers (id, driver_name, car_num, 
      phone, carrier, owner_id
      )
    values (#{id,jdbcType=INTEGER}, #{driverName,jdbcType=VARCHAR}, #{carNum,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{carrier,jdbcType=VARCHAR}, #{ownerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.pcl.springlongkuang.Model.Driver" >
    insert into drivers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="driverName != null" >
        driver_name,
      </if>
      <if test="carNum != null" >
        car_num,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="carrier != null" >
        carrier,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="driverName != null" >
        #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null" >
        #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="carrier != null" >
        #{carrier,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.pcl.springlongkuang.Model.Driver" >
    update drivers
    <set >
      <if test="driverName != null" >
        driver_name = #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null" >
        car_num = #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="carrier != null" >
        carrier = #{carrier,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.pcl.springlongkuang.Model.Driver" >
    update drivers
    set driver_name = #{driverName,jdbcType=VARCHAR},
      car_num = #{carNum,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      carrier = #{carrier,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>